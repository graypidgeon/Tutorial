plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "io.freefair.lombok" version "4.1.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

if (!System.hasProperty("spring.profiles.active")) {
	file("src/main/resources/application.properties").withReader {
		Properties props = new Properties()
		props.load(it)
		project.ext.springApplicationProps = props
	}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-security'

	compile 'org.projectlombok:lombok:1.18.10'

	compile 'com.h2database:h2'

	compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compile 'org.apache.commons:commons-lang3:3.9'


	//ctrl + f9 to reload
    compile 'org.springframework.boot:spring-boot-devtools'

    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

clean {
	delete LOCAL_IMAGE_DATABASE_LOCATION
}

processResources {
	doLast {
		if ((!System.hasProperty("spring.profiles.active") &&
				project.ext.springApplicationProps["spring.profiles.active"]) ||
			System.getProperty("spring.profiles.active") == "dev") {
			println "Preparing development image database under " + LOCAL_IMAGE_DATABASE_LOCATION
			delete LOCAL_IMAGE_DATABASE_LOCATION
			mkdir LOCAL_IMAGE_DATABASE_LOCATION
			copy {
				from '.'
				into LOCAL_IMAGE_DATABASE_LOCATION
				include 'dev/**'
			}
		}
	}
}